context.modules = [
  {
    name = libpipewire-module-filter-chain
    args = {
      # The name that will appear in PipeWire tools (like qjackctl, helvum)
      node.description = "Convolution Reverb Sink"
      # The internal media class for the sink/source
      media.name = "Reverb Sink"
      
      # Properties for the resulting virtual source/sink
      capture.props = {
        node.name = "input.reverb_source"
        # Set to true so it doesn't automatically connect
        node.passive = true
        # Define the channels (Front Left, Front Right)
        audio.position = [ FL FR ] 
      }
      
      playback.props = {
        node.name = "output.reverb_sink"
        # Set the media class as a Sink for output
        media.class = "Audio/Sink"
        audio.position = [ FL FR ]
      }
      
      # The filter graph definition
      filter.graph = {
        nodes = [
          {
            type = builtin
            name = convolver
            label = convolver
            config = {
              # The path to your Impulse Response file (e.g., a .wav file)
              filename = "/path/to/your/impulse/response/file.wav" 
              # Adjust the gain of the wet signal (optional, default is 1.0)
              gain = 0.8 
              # blocksize and tailsize can be computed automatically 
              # or set for performance tuning (e.g., blocksize = 128)
            }
          }
        ]
        
        # Link the capture stream to the convolver input
        inputs = [ "convolver:In" ]
        # Link the convolver output to the playback stream
        outputs = [ "convolver:Out" ]
      }
    }
  }
]

